#include &lt;stdio.h&gt;
void firstFit(int blockSize[], int m, int processSize[], int n) {
int allocation[n]; 
for (int i = 0; i &lt; n; i++) {
allocation[i] = -1; 
}
for (int i = 0; i &lt; n; i++) { 
for (int j = 0; j &lt; m; j++) { 
if (blockSize[j] &gt;= processSize[i]) { 
allocation[i] = j; 
blockSize[j] -= processSize[i];
break; 
}
}
}
printf(&quot;\nProcess No.\tProcess Size\tBlock No.\n&quot;);
for (int i = 0; i &lt; n; i++) {
printf(&quot; %d\t\t%d\t\t&quot;, i + 1, processSize[i]);
if (allocation[i] != -1)
printf(&quot;%d\n&quot;, allocation[i] + 1);
else
printf(&quot;Not Allocated\n&quot;);
}
}
int main() {
int m, n;
printf(&quot;Enter number of memory blocks: &quot;);
scanf(&quot;%d&quot;, &amp;m);
int blockSize[m];
printf(&quot;Enter the size of each memory block:\n&quot;);
for (int i = 0; i &lt; m; i++) {
printf(&quot;Block %d: &quot;, i + 1);
scanf(&quot;%d&quot;, &amp;blockSize[i]);
}
printf(&quot;\nEnter number of processes: &quot;);
scanf(&quot;%d&quot;, &amp;n);
int processSize[n];
printf(&quot;Enter the size of each process:\n&quot;);
for (int i = 0; i &lt; n; i++) {
printf(&quot;Process %d: &quot;, i + 1);
scanf(&quot;%d&quot;, &amp;processSize[i]);
}
printf(&quot;\nFirst Fit Memory Allocation:\n&quot;);
firstFit(blockSize, m, processSize, n);
return 0;
}
