#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
void scanDiskScheduling(int requests[], int n, int head, int direction, int diskSize) {
int totalSeekTime = 0;
int seekSequence[n + 2]; 
int index = 0;
for (int i = 0; i &lt; n - 1; i++) {
for (int j = 0; j &lt; n - i - 1; j++) {
if (requests[j] &gt; requests[j + 1]) {
int temp = requests[j];
requests[j] = requests[j + 1];
requests[j + 1] = temp;
}
}
}
int pos = 0;
while (pos &lt; n &amp;&amp; requests[pos] &lt; head) {
pos++;
}
if (direction == 1) { 
for (int i = pos; i &lt; n; i++) {
seekSequence[index++] = requests[i];
totalSeekTime += abs(head - requests[i]);
head = requests[i];
}
if (head != diskSize - 1) {
seekSequence[index++] = diskSize - 1;
totalSeekTime += abs(head - (diskSize - 1));
head = diskSize - 1;
}
for (int i = pos - 1; i &gt;= 0; i--) {
seekSequence[index++] = requests[i];
totalSeekTime += abs(head - requests[i]);
head = requests[i];
}
} else { 
for (int i = pos - 1; i &gt;= 0; i--) {
seekSequence[index++] = requests[i];
totalSeekTime += abs(head - requests[i]);
head = requests[i];
}
if (head != 0) {
seekSequence[index++] = 0;
totalSeekTime += abs(head - 0);
head = 0;
}
for (int i = pos; i &lt; n; i++) {
seekSequence[index++] = requests[i];
totalSeekTime += abs(head - requests[i]);
head = requests[i];
}
}
printf(&quot;\nSeek Sequence: &quot;);
for (int i = 0; i &lt; index; i++) {
printf(&quot;%d &quot;, seekSequence[i]);
if (i != index - 1) {
printf(&quot;-&gt; &quot;);
}
}
printf(&quot;\nTotal Seek Time: %d\n&quot;, totalSeekTime);
printf(&quot;Average Seek Time: %.2f\n&quot;, (float)totalSeekTime / n);
}
int main() {
int n, head, direction, diskSize;
printf(&quot;Enter the total disk size: &quot;);
scanf(&quot;%d&quot;, &amp;diskSize);
printf(&quot;Enter the number of disk requests: &quot;);
scanf(&quot;%d&quot;, &amp;n);
int requests[n];
printf(&quot;Enter the disk request sequence: &quot;);
for (int i = 0; i &lt; n; i++) {
scanf(&quot;%d&quot;, &amp;requests[i]);
}
printf(&quot;Enter the initial head position: &quot;);
scanf(&quot;%d&quot;, &amp;head);
printf(&quot;Enter the direction (1 for right, 0 for left): &quot;);
scanf(&quot;%d&quot;, &amp;direction);
printf(&quot;\nSCAN Disk Scheduling Algorithm:\n&quot;);
scanDiskScheduling(requests, n, head, direction, diskSize);
return 0;
}
